version: '3.7'

services:
  postgresql:
    image: postgres:9.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - result
      - link-vote-result
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker

  result:
    image: jurjerie/voting-app-result
    environment:
      - POSTGRES_HOST=postgresql
    depends_on:
      - postgresql
      - worker
    networks:
      - result
    ports:
      - "8081:8888"
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  worker:
    image: jurjerie/voting-app-worker
    depends_on:
      - postgresql
      - redis
    networks:
      - link-vote-result
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  vote:
    image: jurjerie/voting-app-vote
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - vote
    ports:
      - "8080:8080"
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    networks:
      - vote
      - link-vote-result
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  vote:
  result:
  link-vote-result:

volumes:
  postgres-data:
  redis-data:
